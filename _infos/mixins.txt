///////////////////////////////////////////////////////////////////////////////////////

                                    LES MIXINS

///////////////////////////////////////////////////////////////////////////////////////

Plut√¥t que d‚Äô√™tre limit√©s √† des valeurs, les mixins stockent des blocs entiers de code. ü§ò Vous pouvez les utiliser pour stocker des ensembles de r√®gles CSS que vous utilisez fr√©quemment, comme avec une variable :


Vous pouvez modifier votre mixin pour qu‚Äôil se comporte diff√©remment selon ses inputs.
Si vous placez des parenth√®ses apr√®s le nom de votre mixin mais avant les accolades, et qu‚Äôentre ces parenth√®ses vous mettez un argument (ou plusieurs), votre mixin devient customisable ü§© :

@mixin heading-shadow($colour){
  text-shadow: .55rem .55rem #15DEA5;
}
------------------------------------------------
D√âFINISSEZ UNE VALEUR

D√©sormais, vous pouvez utiliser text-shadows avec la couleur que vous voulez et ce, en customisant la couleur une seule fois.

Pour toutes les autres instances, le $colour-primary  originel aurait tr√®s bien fait l‚Äôaffaire.

Plut√¥t que de renseigner une valeur de couleur chaque fois que vous utilisez votre mixin heading-shadow, vous pouvez r√©gler la valeur par d√©faut de l‚Äôargument. Si vous d√©cidez de ne pas customiser la couleur de l‚Äôombre, c‚Äôest la couleur par d√©faut qui sera utilis√©e. Vous pouvez le faire en d√©finissant sa valeur de la m√™me mani√®re que pour une variable d√©clar√©e normalement :

@mixin heading-shadow($colour: $colour-primary){
  text-shadow: .55rem .55rem $colour;
}

Du coup, si vous oubliez d‚Äôajouter l‚Äôargument ou d‚Äôassigner une couleur √† la variable quand vous l‚Äôincluez, Sass en d√©duira que vous voulez que l‚Äôombre soit celle de la couleur par d√©faut, dans notre cas $colour-primary.
------------------------------------------------

///////////////////////////////////////////////////////////////////////////////////////

                                UTILISATION DES MIXINS

///////////////////////////////////////////////////////////////////////////////////////

/*
01) POUR CR√âER UNE MININ
Donner des noms √† vos mixins qui d√©finissent leur fonction 
_________
EXEMPLE :
@mixin shadow-title {
    text-shadow: .55rem .55rem;
}

**********************************************************

02) POUR INR√âGRER NOTRE MIXIN DANS NOS CSS
IL FAUT UTILISER LE MOT CL√â : @include (suivi du nom de la mixin)
_________
EXEMPLE :
section {
    @include shadow-title;
}

**********************************************************

03) POUR AJOUTER UNE VARIABLE √Ä NOTRE MIXIN
_________
EXEMPLE :
@mixin shadow-title ($color){
    text-shadow: .55rem .55rem($color);
}
_____________
INT√âGRATION :
section {
    @include shadow-title(#fff);
}

**********************************************************

04) POUR AJOUTER UNE VARIABLE "PAR DEFAUT" √Ä NOTRE MIXIN
_________
EXEMPLE :
@mixin shadow-title ($color: $color-par-defaut){
    text-shadow: .55rem .55rem($color);
}
_______________________________________________
INT√âGRATION SI UNE COULEUR N'EST PAS D√âFINIT :
C'est la couleur par d√©faut qui sera automatiquement inr√©gr√©.

section {
    @include shadow-title($color-par-defaut);
}

*/