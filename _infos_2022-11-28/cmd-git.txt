LUNDI 28 NOVEMBRE 2022
///////////////////////////////////////////////////////////////////////////////////////

                        (1) C O M M A N D E S : GIT

///////////////////////////////////////////////////////////////////////////////////////

Dernière version : MARDI 09 AOUT 2022
INFOS :
Ajout de nouvelles commandes git, non évoquées chez Doranco.
- Fusion des branches.
- Consulter toutes nos branches et voir sur quelle branche on se trouve.
- Lier un depot Git Local à un depot Git distant préalablement créer.
- Dupliquer en local le depot distant lié au Git local.

°°° GESTION DES ERREURS °°°
- Modifier le nom du dernier commit effectué.

-------------------------------------------------------------------

Précédente version : JEUDI 31 MARS 2022
INFOS :
Les fichiers CDM-Git dans le tableau de la fin
et sans les modifications du mot : dépôt. Ne sont pas les derniers.

///////////////////////////////////////////////////////////////////////////////////////

LISTE DES COMMANDES GIT détaillées :
-------------------------------------------------------------------

1. Initialiser GIT sur votre projet avec la commande
(créer un repository local au niveau du projet .git) :
            | git init
-------------------------------------------------------------------

2. Configurer (votre user) name et (user email) :
            | git config --global user.name "Valerie"
    git config --global user.email "your-email@gmail.com"
            | git config --global user.email "elmaceo@gmail.com"
-------------------------------------------------------------------

3. Voir la liste des configurations :
            | git config --list
-------------------------------------------------------------------

4. Voir ou vous en êtes - Voir l'état du projet par rapport à GIT
(liste l'ensemble des fichiers untrack ou modifiés) :
            | git status
----------------------------------------------------------------------------------------------
°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°

        CONNECTER SON DÉPÔT LOCAL au DÉPÔT DISTANT  (GitHub)
        a) Aller suu GitHub
        b)Créer un "New Repositoy" et lui donner un nom.
        
----------------------------------------------------------------------------------------------
°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°

5a. Créer un commit : 
    git add .  / git add dossier/  git add *.html / git add -A
            | git add .
            | git commit -m "Tapez votre message"
            | git commit -m "first commit"
            | git commit -m "

5a. Modifier le nom du dernier commit effectué : 
            | git commit --amand -m "Tapez votre (NOUVEAU NOM) de message"

----------------------------------------------------------------------------------------------
°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°

        CRÉER UN REMOTE =(distance) DU PROJET
        a) ALLER SUR GITHUB
        b) Repérer la ligne de CMD : (git remote add origin) SUIVIE du Https du repository
        c) COPIER cette ligne de CDM dans son intégralité sur GITHUB
        d) COLLER cette ligne de CDM dans le terminal de VS CODE.
        ELLE RESSEMBLE à la ligne, ci-dessous :
            | git remote add origin https://github.com/ValerieElisabeth/adepa.git
            | git remote add origin https://github.com/ValerieElisabeth/openclassroomsP3.git



----------------------------------------------------------------------------------------------
°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°

6. Voir les remotes existant
            | git remote -v 
-------------------------------------------------------------------

7. > > > > > OPTIONNEL < < < < <
(SI BESOIN) : Supprimer un remote
            | git remote rm nom_du_remote_a_supprimer
-------------------------------------------------------------------

8. Push les commits locaux sur GitHub
            | git push origin
            | git push -u origin main
-------------------------------------------------------------------

9. AU PREMIER COMMIT normalement, il faut... (Tapez la CMD (git) fournit par le terminal)
            | git push --set-upstream origin master
-------------------------------------------------------------------

10. (SI BESOIN) : Récupérer un projet GitHub existant : Cloner un repository GitHub existant.
    INFOS : (le https est disponible sur le repository github)
            | git clone https://github.com/nom_du_profil/nom_du_repository.git


///////////////////////////////////////////////////////////////////////////////////////







///////////////////////////////////////////////////////////////////////////////////////

                (2) C O M M A N D E S   :  GIT    S I M P L I F I É E S

---------------------------------------------------------------------------------------
Lien création d'un README : 
https://www.youtube.com/watch?v=ECuqb5Tv9qI&ab_channel=codeSTACKr

///////////////////////////////////////////////////////////////////////////////////////

LISTE DES COMMANDES GIT détaillées :
-------------------------------------------------------------------

01. Initialiser GIT. Tapez la CMD.
            | git init
-------------------------------------------------------------------

02. Configurer votre (user.name) et (user.email) :
            | git config --global user.name "Valerie"
            | git config --global user.email "elmaceo@gmail.com"
-------------------------------------------------------------------

03. Voir la liste des configurations :
            | git config --list
-------------------------------------------------------------------

04. Voir l'ensemble des fichiers untrack ou modifiés :
            | git status

----------------------------------------------------------------------------------------------
°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°

        CONNECTER SON DÉPÔT LOCAL au DÉPÔT DISTANT  (GitHub)
        a) Aller sur GitHub
        b)Créer un "New Repositoy" et lui donner un nom.

----------------------------------------------------------------------------------------------
°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°

05. Créer un commit : 
            | git add .
            | git commit -m "first commit"
            | git commit -m "

----------------------------------------------------------------------------------------------
°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°

        CRÉER UN REMOTE =(distance) DU PROJET
        a) ALLER SUR GITHUB
        b) Repérer la ligne de CMD : (git remote add origin) SUIVIE du Https du repository
        c) COPIER cette ligne de CDM dans son intégralité sur GITHUB
        d) COLLER cette ligne de CDM dans le terminal de VS CODE.
        ELLE RESSEMBLE à la ligne, ci-dessous :
            | git remote add origin https://github.com/ValerieElisabeth/adepa.git

----------------------------------------------------------------------------------------------
°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°

06. Voir les remotes existant.
            | git remote -v 
-------------------------------------------------------------------

09. > > > > > OPTIONNEL < < < < <
(SI BESOIN) : Supprimer un remote
            | git remote rm nom_du_remote_a_supprimer
-------------------------------------------------------------------

08. Push les commits locaux sur GitHub
            | git push origin
            | git push -u origin main

            ATTENTION ! ! ! Pour le premier "git push" ne surtout pas oublier d'ajouter : "-u origin main"
-------------------------------------------------------------------

09. AU PREMIER COMMIT normalement, il faut... (Tapez la CMD (git) fournit par le terminal)
            | git push --set-upstream origin master
-------------------------------------------------------------------

10. (SI BESOIN) : Récupérer un projet GitHub existant : Cloner un repository GitHub existant.
    INFOS : (le https est disponible sur le repository github)
            | git clone https://github.com/nom_du_profil/nom_du_repository.git



///////////////////////////////////////////////////////////////////////////////////////

           (3) LIER UN DÉPÔT GIT LOCAL AU DÉPÔT DIASTANT SUR GITHUB

///////////////////////////////////////////////////////////////////////////////////////

11. Pour lier votre dépôt local au dépôt distant, intitulé "monDepotDistant",
    vous devez effectuer la commande :

            | git remote add nomCourtDuDepot https://github.com/xxxxxx/monDepotDistant
            | git remote add DEP https://github.com/xxxxxx/monDepotDistant

La commande git remote doit être effectuée sous la forme :
git remote add leNomCourt "URL de votre dépôt".

///////////////////////////////////////////////////////////////////////////////////////

           (4) DUPLIQUER EN LOCAL LE DÉPÔT GITHUB LIÉ AU DEPOT GIT LOCAL

///////////////////////////////////////////////////////////////////////////////////////

12. Utiliser la commande : git clone + l'URLduDepotDistant
            | git clone https://github.com/xxxxxx/monDepotDistant

///////////////////////////////////////////////////////////////////////////////////////



///////////////////////////////////////////////////////////////////////////////////////

                        (5) LES BRANCHES : GIT

///////////////////////////////////////////////////////////////////////////////////////

01. Création d'une branch
            | git branch nom_de_la_branch
            | git checkout -b nom_de_la_branch_qui_existe (crée la branch + vous place directement sur cette branch)
-------------------------------------------------------------------

02.  Se déplacer de sur les branch avec la commande : "git checkout"
            | git checkout nom_de_la_branch 
-------------------------------------------------------------------

03. Supprimer une branch (vierge)
            | git branch -d nom_de_la_branch

03. Supprimer une branch (avec des données)
            | git branch -D nom_de_la_branch

        ATTENTION ! ! ! 
        La suppression de cette branche entraînera la suppression de tous les fichiers
        et modifications que nous n'aurez pas commités sur cette branche.

-------------------------------------------------------------------

04. Se déplacer sur un commit avec la commande : "git checkout commit"
            | git checkout commit id_du_commit
-------------------------------------------------------------------

05. Consulter toutes nos branches
            | git branch

EXEMPLE DE RÉSULTAT POSSIBLE :
            | git branch
              main
              branche numéro 1
              * branche numéro 2
              branche numéro 3
(*) L'étoile indique la branche sur laquelle nous nous trouvons
-------------------------------------------------------------------

              A U T R E S    C O M M A N D E S

-------------------------------------------------------------------

06. Voir l'ensemble des commits de la branch du plus récent au plus ancien
            | git log
-------------------------------------------------------------------

07. Voir qui a modifié un fichier 
            | git blame 
-------------------------------------------------------------------

F U S I O N N E R   U N E   B R A N C H E   S U R   L E   M A I N              

-------------------------------------------------------------------

08. Je veux fusionner ma branche "branche numéro 1" au main avec la commnande "merge"
            | git checkout main
            | git merge branche numéro 1

La commande "merge" doit s'utiliser à partir de la branche dans laquelle nous voulons apporter les évolutions.
Nous voulons apporter les évolutions de la branche “branche numéro 1” dans la branche principale (main).
-------------------------------------------------------------------

09. emplacement disponible

///////////////////////////////////////////////////////////////////////////////////////






///////////////////////////////////////////////////////////////////////////////////////

                (5)  L E S   C O M M A N D E S   D E   B A S E   G I T

        ////////////////////////////// ROUTINE GIT //////////////////////////////
        |   1)   git add .                | Ajouter les dernières motifs.       |
        |   2)   git status               | Les visualiser.                     |
        |   3)   git commit -m "          | Donner un nom à son commit.         |
        |   4)   git push origin          | Pousser notre commit sur GitHub.    |
        /////////////////////////////////////////////////////////////////////////

///////////////////////////////////////////////////////////////////////////////////////
